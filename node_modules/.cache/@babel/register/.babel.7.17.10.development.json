{"{\"assumptions\":{},\"sourceRoot\":\"/Users/BigBoi/Desktop/functional-ES6/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/BigBoi/Desktop/functional-ES6\",\"filename\":\"/Users/BigBoi/Desktop/functional-ES6/hello-world.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/BigBoi/Desktop/functional-ES6\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.17.10:development":{"value":{"code":"\"use strict\";\n\nvar sayHello = function sayHello(name) {\n  return console.log(\"Hello \".concat(name));\n};\n\nsayHello('John');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzYXlIZWxsbyIsIm5hbWUiLCJjb25zb2xlIiwibG9nIl0sInNvdXJjZVJvb3QiOiIvVXNlcnMvQmlnQm9pL0Rlc2t0b3AvZnVuY3Rpb25hbC1FUzYvIiwic291cmNlcyI6WyJoZWxsby13b3JsZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzYXlIZWxsbyA9IG5hbWUgPT4gY29uc29sZS5sb2coYEhlbGxvICR7bmFtZX1gKTtcblxuc2F5SGVsbG8oJ0pvaG4nKSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxRQUFRLEdBQUcsU0FBWEEsUUFBVyxDQUFBQyxJQUFJO0VBQUEsT0FBSUMsT0FBTyxDQUFDQyxHQUFSLGlCQUFxQkYsSUFBckIsRUFBSjtBQUFBLENBQXJCOztBQUVBRCxRQUFRLENBQUMsTUFBRCxDQUFSIn0=","map":{"version":3,"names":["sayHello","name","console","log"],"sourceRoot":"/Users/BigBoi/Desktop/functional-ES6/","sources":["hello-world.js"],"sourcesContent":["const sayHello = name => console.log(`Hello ${name}`);\n\nsayHello('John')"],"mappings":";;AAAA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAAAC,IAAI;EAAA,OAAIC,OAAO,CAACC,GAAR,iBAAqBF,IAArB,EAAJ;AAAA,CAArB;;AAEAD,QAAQ,CAAC,MAAD,CAAR"}},"mtime":1652388962006},"{\"assumptions\":{},\"sourceRoot\":\"/Users/BigBoi/Desktop/functional-ES6/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/BigBoi/Desktop/functional-ES6\",\"filename\":\"/Users/BigBoi/Desktop/functional-ES6/example.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/BigBoi/Desktop/functional-ES6\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.17.10:development":{"value":{"code":"\"use strict\";\n\n// const add = (x, y) => x + y;\n// const double = number => number * 2;\n// //as opposed to\n// // const double = function(number) {\n// //   return number * 2;\n// // }\n// const sayHello = () => console.log('Hello');\n// const getPersonData = () => ({\n//     name: 'John Whitten',\n//     age: 38,\n//     job: 'programmer',\n// });\n// const myArrowFunction = (arg1, arg2) => arg1 + arg2;\n// as opposed to\n// const myArrowFunction = (arg1, arg2) => {\n//   return arg1 + arg2;\n// }\n// const sayHello = name => console.log('Hello' + name);\n// const sayHello2 = sayHello;\n// sayHello2('John');\n// const myFunction = true \n//     ? () => console.log('First option')\n//     : () => console.log('Second option');\n// const DEVELOPMENT = true;\n// const fetchDataReal = () => {\n//   // time-intensive operations here\n// }\n// const fetchDataFake = () => ({\n//     name: 'John Whitten',\n//     age: 38,\n// });\n// const fetchData = DEVELOPMENT\n//     ? fetchDataFake\n//     : fetchDataReal;\n// const double = x => x * 2;\n// const subtractOne = x => -1;\n// const triple = x => x * 3;\n// const add5 = x => x + 5;\n// const myNumber = 42;\n// const doubled = double(myNumber);\n// const minusOne = subtractOne(doubled);\n// //..\n// const functionsArray = [\n//     double, \n//     subtractOne,\n//     triple,\n//     add5,\n//     Math.sqrt,\n//   ];\n// var number = 42;\n// functionsArray.forEach(func => number = func(number));\n// console.log(number);\n//--------------------------------------------------------\n// Passing functions as arguments\n// const add = (x, y) => x + y;\n// const subtract = (x, y) => x - y;\n// const combine2and3 = func =>\n//     func(2, 3);\n// // combine2and3(add); // -> 2 + 3\n// combine2and3((x, y) => x + y);\n// // combine2and3(subtract); // -> 2 - 3 \n// combine2and3(Math.max) // -> 3\n//--------------------------------------------------------\n// Returning functions\n// const createPrinter = () => () => console.log(\"Hello\");\n// // //// which is an arrow syntax way of writing the following:\n// const createPrinter = function() {\n//   return function() {\n//     console.log(\"Hello\");\n//   }\n// } \n// const createMultiplier = y => x => x * y;\n// // const double = x => x * 2;\n// // const triple = x => x * 3;\n// // const quadruple = x => x * 4;\n// const double = createMultiplier(2);\n// const triple = createMultiplier(3);\n// const quadruple = createMultiplier(4);\n// double(3)\n//--------------------------------------------------------\n// Closure\n// const createPrinter = () => {\n//   const myFavoriteNumber = 13;\n//   return () => console.log(`My favorite number is ${myFavoriteNumber}`);\n// }\n// const printer = createPrinter();\n// printer();\n// // $ npx babel-node example.js\n//--------------------------------------------------------\n// Implement private variable\n// const Person = ({ name, age, job }) => {\n//     var _name = name;\n//     var _age = age;\n//     var _job = job;\n//     return { \n//         getName: () => _name,\n//         getAge: () => _age,\n//         getJob: () => _job,\n//         setJob: newJob => _job = newJob,\n//         setAge: newAge => _age = newAge,\n//     };\n// }\n// const me = Person({ name: 'John', age: 38, job: \"artist\"});\n// console.log(me.getJob());\n// // me._name; // -> undefined\n// me.setJob('web developer');\n// console.log(me.getJob());\n// // me._job; // -> undefined\n// console.log(me.getAge());\n// me.setAge(\"forever young\");\n// console.log(me.getAge());\n//--------------------------------------------------------\n// Higher-Order Functions\n// const divide = (x, y) => {\n//   if (y === 0) {\n//     console.log('Error: dividing by zero');\n//     return null;\n//   }\n//   return x / y;\n// }\n// Improve the above code using higher-order functions\n// const divide = (x, y) => x / y;\n// const secondArgumentIsntZero = func =>\n// (...args) => {\n//   if (args[1] === 0) {\n//     console.log('Error: dividing by zero');\n//     return null;\n//   }\n//   return func(...args);\n// }\n// const divideSafe = secondArgumentIsntZero(divide);\n// console.log(divideSafe(7, 0));\n// console.log(divideSafe(5, 3));\n//--------------------------------------------------------\n// JavaScript: function parts\n//--------------------------------------------------------\n// The spread operator\n// const person = {\n//   name: \"John Whitten\",\n//   age: 38,\n//   hairColor: \"red\",\n//   eyeColor: \"brown\",\n// };\n// const careerData = {\n//   title: \"instructor\",\n//   company: \"Oregon State University\",\n// };\n// const personWithCareerDate = {\n//   ...person,\n//   ...careerData,\n// };\n// const updates = {\n//   name: \"John john\"\n// }\n// const updatedPerson = {\n//   ...person,\n//   ...updates,\n// };\n// // // console.log(personWithCareerDate);\n// // console.log(updatedPerson);\n// const numbers = [1,2,3,4,5];\n// // instead of -> numbers.push(6);\n// const newNumbers = [\n//   ...numbers,\n//   6,\n// ];\n// console.log(newNumbers);\n//--------------------------------------------------------\n// Mapping\n// // How we used to double numbers in an array\n// const doubledNumbers = [];\n// for (let i = 0; i < doubledNumbers.length; i++) {\n//   const doubled = numbers[i] * 2;\n//   doubledNumbers.push(doubled);\n// }\n// const numbers = [1,2,3,4,5];\n// numbers.reverse();\n// console.log(numbers);\n// non-functional way of using mapping\n// const numbers = [1,2,3,4,5];\n// const doubledNumbers = [];\n// for (let i = 0; i < numbers.length; i++) {\n//   doubledNumbers.push(numbers[i] * 2);\n// }\n//  console.log(doubledNumbers);\n// ***** re-write the above functional in a functional programming way *****\n// const numbers = [1,2,3,4,5];\n// const double = x => x * 2;\n// const doubledNumbers = numbers.map(double);\n// console.log(doubledNumbers);\n//--------------------------------------------------------\n// Filtering\n// myArray.filter(element => {\n//   ...return true; // (or false)\n// });\n// the difference between filter and map is the TYPE of function we pass into it\n// in map we pass in a function that returns a value for each element in the array\n// for filter we pass in a function that returns either true or false\n// const numbers = [1,2,3,4,5,6,7,8,9,10];\n// var evenNumbers = [];\n// for (let i = 0; i < numbers.length; i++) {\n//   if (numbers[i] % 2 === 0) {\n//     evenNumbers.push(numbers[i]);\n//   }\n// }\n// **** now we'll simplify the above function using filter ****\n// const numbers = [1,2,3,4,5,6,7,8,9,10];\n// const isEven = x => x % 2 === 0; \n// const evenNumbers = numbers.filter(isEven);\n// console.log(evenNumbers);\n// const words = [\n//   'hello',\n//   'goodbye',\n//   'the',\n//   'Antarctica',\n// ];\n// // const isLongerThan5 = word => word.length > 5;\n// // const longWords = words.filter(isLongerThan5);\n// // console.log(longWords);\n// ***** write a higher order function to do this mith minimal code *****\n// const createLengthTest = minLength => \n//     word => word.length > minLength;\n// const longWords = words.filter(createLengthTest(5));\n// console.log(longWords);\n// This here is a very nice functional code\n//--------------------------------------------------------\n// Every/some\n// we pass them a function that reurns either true or false, but every/some returns a boolean (only true or false)\n// -- every returns true if and only if a given condition is true for all elements in an array\n// -- some returns true if the conditions are true any of the elements in an array, false if and only if every condition is false for all elements in the array\n// example\nvar employees = [{\n  name: 'John Whitten',\n  salary: 90000\n}, {\n  same: 'Katherine Spinella',\n  salary: 120000\n}, {\n  name: 'Franny Danza',\n  salary: 1500000\n}, {\n  name: 'MoonPie Danger',\n  salary: 830000\n}];\n\nvar makesMoreThanOneMillion = function makesMoreThanOneMillion(employee) {\n  return employee.salary > 1000000;\n};\n\nvar result = employees.some(makesMoreThanOneMillion); // console.log(result);\n\nvar formValues = ['Mike', 'Stephen', 'California', 'developer'];\n\nvar isNotEmpty = function isNotEmpty(string) {\n  return !!string;\n};\n\nvar allFieldsFilled = formValues.every(isNotEmpty);\nconsole.log(allFieldsFilled); //--------------------------------------------------------\n// Slicing\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJlbXBsb3llZXMiLCJuYW1lIiwic2FsYXJ5Iiwic2FtZSIsIm1ha2VzTW9yZVRoYW5PbmVNaWxsaW9uIiwiZW1wbG95ZWUiLCJyZXN1bHQiLCJzb21lIiwiZm9ybVZhbHVlcyIsImlzTm90RW1wdHkiLCJzdHJpbmciLCJhbGxGaWVsZHNGaWxsZWQiLCJldmVyeSIsImNvbnNvbGUiLCJsb2ciXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9CaWdCb2kvRGVza3RvcC9mdW5jdGlvbmFsLUVTNi8iLCJzb3VyY2VzIjpbImV4YW1wbGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gY29uc3QgYWRkID0gKHgsIHkpID0+IHggKyB5O1xuXG4vLyBjb25zdCBkb3VibGUgPSBudW1iZXIgPT4gbnVtYmVyICogMjtcbi8vIC8vYXMgb3Bwb3NlZCB0b1xuLy8gLy8gY29uc3QgZG91YmxlID0gZnVuY3Rpb24obnVtYmVyKSB7XG4vLyAvLyAgIHJldHVybiBudW1iZXIgKiAyO1xuLy8gLy8gfVxuXG4vLyBjb25zdCBzYXlIZWxsbyA9ICgpID0+IGNvbnNvbGUubG9nKCdIZWxsbycpO1xuXG4vLyBjb25zdCBnZXRQZXJzb25EYXRhID0gKCkgPT4gKHtcbi8vICAgICBuYW1lOiAnSm9obiBXaGl0dGVuJyxcbi8vICAgICBhZ2U6IDM4LFxuLy8gICAgIGpvYjogJ3Byb2dyYW1tZXInLFxuLy8gfSk7XG5cbi8vIGNvbnN0IG15QXJyb3dGdW5jdGlvbiA9IChhcmcxLCBhcmcyKSA9PiBhcmcxICsgYXJnMjtcblxuLy8gYXMgb3Bwb3NlZCB0b1xuLy8gY29uc3QgbXlBcnJvd0Z1bmN0aW9uID0gKGFyZzEsIGFyZzIpID0+IHtcbi8vICAgcmV0dXJuIGFyZzEgKyBhcmcyO1xuLy8gfVxuXG4vLyBjb25zdCBzYXlIZWxsbyA9IG5hbWUgPT4gY29uc29sZS5sb2coJ0hlbGxvJyArIG5hbWUpO1xuXG4vLyBjb25zdCBzYXlIZWxsbzIgPSBzYXlIZWxsbztcbi8vIHNheUhlbGxvMignSm9obicpO1xuXG4vLyBjb25zdCBteUZ1bmN0aW9uID0gdHJ1ZSBcbi8vICAgICA/ICgpID0+IGNvbnNvbGUubG9nKCdGaXJzdCBvcHRpb24nKVxuLy8gICAgIDogKCkgPT4gY29uc29sZS5sb2coJ1NlY29uZCBvcHRpb24nKTtcblxuLy8gY29uc3QgREVWRUxPUE1FTlQgPSB0cnVlO1xuXG4vLyBjb25zdCBmZXRjaERhdGFSZWFsID0gKCkgPT4ge1xuLy8gICAvLyB0aW1lLWludGVuc2l2ZSBvcGVyYXRpb25zIGhlcmVcbi8vIH1cblxuLy8gY29uc3QgZmV0Y2hEYXRhRmFrZSA9ICgpID0+ICh7XG4vLyAgICAgbmFtZTogJ0pvaG4gV2hpdHRlbicsXG4vLyAgICAgYWdlOiAzOCxcbi8vIH0pO1xuXG4vLyBjb25zdCBmZXRjaERhdGEgPSBERVZFTE9QTUVOVFxuLy8gICAgID8gZmV0Y2hEYXRhRmFrZVxuLy8gICAgIDogZmV0Y2hEYXRhUmVhbDtcblxuLy8gY29uc3QgZG91YmxlID0geCA9PiB4ICogMjtcbi8vIGNvbnN0IHN1YnRyYWN0T25lID0geCA9PiAtMTtcbi8vIGNvbnN0IHRyaXBsZSA9IHggPT4geCAqIDM7XG4vLyBjb25zdCBhZGQ1ID0geCA9PiB4ICsgNTtcblxuLy8gY29uc3QgbXlOdW1iZXIgPSA0MjtcblxuLy8gY29uc3QgZG91YmxlZCA9IGRvdWJsZShteU51bWJlcik7XG4vLyBjb25zdCBtaW51c09uZSA9IHN1YnRyYWN0T25lKGRvdWJsZWQpO1xuLy8gLy8uLlxuXG4vLyBjb25zdCBmdW5jdGlvbnNBcnJheSA9IFtcbi8vICAgICBkb3VibGUsIFxuLy8gICAgIHN1YnRyYWN0T25lLFxuLy8gICAgIHRyaXBsZSxcbi8vICAgICBhZGQ1LFxuLy8gICAgIE1hdGguc3FydCxcbi8vICAgXTtcblxuLy8gdmFyIG51bWJlciA9IDQyO1xuXG4vLyBmdW5jdGlvbnNBcnJheS5mb3JFYWNoKGZ1bmMgPT4gbnVtYmVyID0gZnVuYyhudW1iZXIpKTtcblxuLy8gY29uc29sZS5sb2cobnVtYmVyKTtcblxuXG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFBhc3NpbmcgZnVuY3Rpb25zIGFzIGFyZ3VtZW50c1xuXG4vLyBjb25zdCBhZGQgPSAoeCwgeSkgPT4geCArIHk7XG4vLyBjb25zdCBzdWJ0cmFjdCA9ICh4LCB5KSA9PiB4IC0geTtcblxuLy8gY29uc3QgY29tYmluZTJhbmQzID0gZnVuYyA9PlxuLy8gICAgIGZ1bmMoMiwgMyk7XG4gIFxuLy8gLy8gY29tYmluZTJhbmQzKGFkZCk7IC8vIC0+IDIgKyAzXG4vLyBjb21iaW5lMmFuZDMoKHgsIHkpID0+IHggKyB5KTtcbi8vIC8vIGNvbWJpbmUyYW5kMyhzdWJ0cmFjdCk7IC8vIC0+IDIgLSAzIFxuXG4vLyBjb21iaW5lMmFuZDMoTWF0aC5tYXgpIC8vIC0+IDNcblxuXG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFJldHVybmluZyBmdW5jdGlvbnNcblxuLy8gY29uc3QgY3JlYXRlUHJpbnRlciA9ICgpID0+ICgpID0+IGNvbnNvbGUubG9nKFwiSGVsbG9cIik7XG4vLyAvLyAvLy8vIHdoaWNoIGlzIGFuIGFycm93IHN5bnRheCB3YXkgb2Ygd3JpdGluZyB0aGUgZm9sbG93aW5nOlxuLy8gY29uc3QgY3JlYXRlUHJpbnRlciA9IGZ1bmN0aW9uKCkge1xuLy8gICByZXR1cm4gZnVuY3Rpb24oKSB7XG4vLyAgICAgY29uc29sZS5sb2coXCJIZWxsb1wiKTtcbi8vICAgfVxuLy8gfSBcblxuLy8gY29uc3QgY3JlYXRlTXVsdGlwbGllciA9IHkgPT4geCA9PiB4ICogeTtcblxuLy8gLy8gY29uc3QgZG91YmxlID0geCA9PiB4ICogMjtcbi8vIC8vIGNvbnN0IHRyaXBsZSA9IHggPT4geCAqIDM7XG4vLyAvLyBjb25zdCBxdWFkcnVwbGUgPSB4ID0+IHggKiA0O1xuXG4vLyBjb25zdCBkb3VibGUgPSBjcmVhdGVNdWx0aXBsaWVyKDIpO1xuLy8gY29uc3QgdHJpcGxlID0gY3JlYXRlTXVsdGlwbGllcigzKTtcbi8vIGNvbnN0IHF1YWRydXBsZSA9IGNyZWF0ZU11bHRpcGxpZXIoNCk7XG5cbi8vIGRvdWJsZSgzKVxuXG5cblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gQ2xvc3VyZVxuXG4vLyBjb25zdCBjcmVhdGVQcmludGVyID0gKCkgPT4ge1xuLy8gICBjb25zdCBteUZhdm9yaXRlTnVtYmVyID0gMTM7XG5cbi8vICAgcmV0dXJuICgpID0+IGNvbnNvbGUubG9nKGBNeSBmYXZvcml0ZSBudW1iZXIgaXMgJHtteUZhdm9yaXRlTnVtYmVyfWApO1xuLy8gfVxuXG4vLyBjb25zdCBwcmludGVyID0gY3JlYXRlUHJpbnRlcigpO1xuLy8gcHJpbnRlcigpO1xuXG4vLyAvLyAkIG5weCBiYWJlbC1ub2RlIGV4YW1wbGUuanNcblxuXG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEltcGxlbWVudCBwcml2YXRlIHZhcmlhYmxlXG5cbi8vIGNvbnN0IFBlcnNvbiA9ICh7IG5hbWUsIGFnZSwgam9iIH0pID0+IHtcbi8vICAgICB2YXIgX25hbWUgPSBuYW1lO1xuLy8gICAgIHZhciBfYWdlID0gYWdlO1xuLy8gICAgIHZhciBfam9iID0gam9iO1xuXG4vLyAgICAgcmV0dXJuIHsgXG4vLyAgICAgICAgIGdldE5hbWU6ICgpID0+IF9uYW1lLFxuLy8gICAgICAgICBnZXRBZ2U6ICgpID0+IF9hZ2UsXG4vLyAgICAgICAgIGdldEpvYjogKCkgPT4gX2pvYixcblxuLy8gICAgICAgICBzZXRKb2I6IG5ld0pvYiA9PiBfam9iID0gbmV3Sm9iLFxuLy8gICAgICAgICBzZXRBZ2U6IG5ld0FnZSA9PiBfYWdlID0gbmV3QWdlLFxuLy8gICAgIH07XG4vLyB9XG5cbi8vIGNvbnN0IG1lID0gUGVyc29uKHsgbmFtZTogJ0pvaG4nLCBhZ2U6IDM4LCBqb2I6IFwiYXJ0aXN0XCJ9KTtcbi8vIGNvbnNvbGUubG9nKG1lLmdldEpvYigpKTtcbi8vIC8vIG1lLl9uYW1lOyAvLyAtPiB1bmRlZmluZWRcbi8vIG1lLnNldEpvYignd2ViIGRldmVsb3BlcicpO1xuLy8gY29uc29sZS5sb2cobWUuZ2V0Sm9iKCkpO1xuLy8gLy8gbWUuX2pvYjsgLy8gLT4gdW5kZWZpbmVkXG4vLyBjb25zb2xlLmxvZyhtZS5nZXRBZ2UoKSk7XG4vLyBtZS5zZXRBZ2UoXCJmb3JldmVyIHlvdW5nXCIpO1xuLy8gY29uc29sZS5sb2cobWUuZ2V0QWdlKCkpO1xuXG5cblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gSGlnaGVyLU9yZGVyIEZ1bmN0aW9uc1xuXG4vLyBjb25zdCBkaXZpZGUgPSAoeCwgeSkgPT4ge1xuLy8gICBpZiAoeSA9PT0gMCkge1xuLy8gICAgIGNvbnNvbGUubG9nKCdFcnJvcjogZGl2aWRpbmcgYnkgemVybycpO1xuLy8gICAgIHJldHVybiBudWxsO1xuLy8gICB9XG5cbi8vICAgcmV0dXJuIHggLyB5O1xuLy8gfVxuXG4vLyBJbXByb3ZlIHRoZSBhYm92ZSBjb2RlIHVzaW5nIGhpZ2hlci1vcmRlciBmdW5jdGlvbnNcblxuLy8gY29uc3QgZGl2aWRlID0gKHgsIHkpID0+IHggLyB5O1xuXG4vLyBjb25zdCBzZWNvbmRBcmd1bWVudElzbnRaZXJvID0gZnVuYyA9PlxuLy8gKC4uLmFyZ3MpID0+IHtcbi8vICAgaWYgKGFyZ3NbMV0gPT09IDApIHtcbi8vICAgICBjb25zb2xlLmxvZygnRXJyb3I6IGRpdmlkaW5nIGJ5IHplcm8nKTtcbi8vICAgICByZXR1cm4gbnVsbDtcbi8vICAgfVxuXG4vLyAgIHJldHVybiBmdW5jKC4uLmFyZ3MpO1xuLy8gfVxuXG4vLyBjb25zdCBkaXZpZGVTYWZlID0gc2Vjb25kQXJndW1lbnRJc250WmVybyhkaXZpZGUpO1xuXG4vLyBjb25zb2xlLmxvZyhkaXZpZGVTYWZlKDcsIDApKTtcbi8vIGNvbnNvbGUubG9nKGRpdmlkZVNhZmUoNSwgMykpO1xuXG5cblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gSmF2YVNjcmlwdDogZnVuY3Rpb24gcGFydHNcblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gVGhlIHNwcmVhZCBvcGVyYXRvclxuXG4vLyBjb25zdCBwZXJzb24gPSB7XG4vLyAgIG5hbWU6IFwiSm9obiBXaGl0dGVuXCIsXG4vLyAgIGFnZTogMzgsXG4vLyAgIGhhaXJDb2xvcjogXCJyZWRcIixcbi8vICAgZXllQ29sb3I6IFwiYnJvd25cIixcbi8vIH07XG5cbi8vIGNvbnN0IGNhcmVlckRhdGEgPSB7XG4vLyAgIHRpdGxlOiBcImluc3RydWN0b3JcIixcbi8vICAgY29tcGFueTogXCJPcmVnb24gU3RhdGUgVW5pdmVyc2l0eVwiLFxuLy8gfTtcblxuLy8gY29uc3QgcGVyc29uV2l0aENhcmVlckRhdGUgPSB7XG4vLyAgIC4uLnBlcnNvbixcbi8vICAgLi4uY2FyZWVyRGF0YSxcbi8vIH07XG5cbi8vIGNvbnN0IHVwZGF0ZXMgPSB7XG4vLyAgIG5hbWU6IFwiSm9obiBqb2huXCJcbi8vIH1cblxuLy8gY29uc3QgdXBkYXRlZFBlcnNvbiA9IHtcbi8vICAgLi4ucGVyc29uLFxuLy8gICAuLi51cGRhdGVzLFxuLy8gfTtcblxuLy8gLy8gLy8gY29uc29sZS5sb2cocGVyc29uV2l0aENhcmVlckRhdGUpO1xuLy8gLy8gY29uc29sZS5sb2codXBkYXRlZFBlcnNvbik7XG5cbi8vIGNvbnN0IG51bWJlcnMgPSBbMSwyLDMsNCw1XTtcbi8vIC8vIGluc3RlYWQgb2YgLT4gbnVtYmVycy5wdXNoKDYpO1xuLy8gY29uc3QgbmV3TnVtYmVycyA9IFtcbi8vICAgLi4ubnVtYmVycyxcbi8vICAgNixcbi8vIF07XG5cbi8vIGNvbnNvbGUubG9nKG5ld051bWJlcnMpO1xuXG5cblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gTWFwcGluZ1xuXG4vLyAvLyBIb3cgd2UgdXNlZCB0byBkb3VibGUgbnVtYmVycyBpbiBhbiBhcnJheVxuLy8gY29uc3QgZG91YmxlZE51bWJlcnMgPSBbXTtcblxuLy8gZm9yIChsZXQgaSA9IDA7IGkgPCBkb3VibGVkTnVtYmVycy5sZW5ndGg7IGkrKykge1xuLy8gICBjb25zdCBkb3VibGVkID0gbnVtYmVyc1tpXSAqIDI7XG4vLyAgIGRvdWJsZWROdW1iZXJzLnB1c2goZG91YmxlZCk7XG4vLyB9XG5cblxuLy8gY29uc3QgbnVtYmVycyA9IFsxLDIsMyw0LDVdO1xuLy8gbnVtYmVycy5yZXZlcnNlKCk7XG4vLyBjb25zb2xlLmxvZyhudW1iZXJzKTtcblxuXG5cbi8vIG5vbi1mdW5jdGlvbmFsIHdheSBvZiB1c2luZyBtYXBwaW5nXG5cbi8vIGNvbnN0IG51bWJlcnMgPSBbMSwyLDMsNCw1XTtcbi8vIGNvbnN0IGRvdWJsZWROdW1iZXJzID0gW107XG4vLyBmb3IgKGxldCBpID0gMDsgaSA8IG51bWJlcnMubGVuZ3RoOyBpKyspIHtcbi8vICAgZG91YmxlZE51bWJlcnMucHVzaChudW1iZXJzW2ldICogMik7XG4vLyB9XG4vLyAgY29uc29sZS5sb2coZG91YmxlZE51bWJlcnMpO1xuXG4vLyAqKioqKiByZS13cml0ZSB0aGUgYWJvdmUgZnVuY3Rpb25hbCBpbiBhIGZ1bmN0aW9uYWwgcHJvZ3JhbW1pbmcgd2F5ICoqKioqXG4vLyBjb25zdCBudW1iZXJzID0gWzEsMiwzLDQsNV07XG4vLyBjb25zdCBkb3VibGUgPSB4ID0+IHggKiAyO1xuLy8gY29uc3QgZG91YmxlZE51bWJlcnMgPSBudW1iZXJzLm1hcChkb3VibGUpO1xuLy8gY29uc29sZS5sb2coZG91YmxlZE51bWJlcnMpO1xuXG5cblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gRmlsdGVyaW5nXG5cbi8vIG15QXJyYXkuZmlsdGVyKGVsZW1lbnQgPT4ge1xuLy8gICAuLi5yZXR1cm4gdHJ1ZTsgLy8gKG9yIGZhbHNlKVxuLy8gfSk7XG5cbi8vIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gZmlsdGVyIGFuZCBtYXAgaXMgdGhlIFRZUEUgb2YgZnVuY3Rpb24gd2UgcGFzcyBpbnRvIGl0XG4vLyBpbiBtYXAgd2UgcGFzcyBpbiBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhIHZhbHVlIGZvciBlYWNoIGVsZW1lbnQgaW4gdGhlIGFycmF5XG4vLyBmb3IgZmlsdGVyIHdlIHBhc3MgaW4gYSBmdW5jdGlvbiB0aGF0IHJldHVybnMgZWl0aGVyIHRydWUgb3IgZmFsc2VcblxuXG4vLyBjb25zdCBudW1iZXJzID0gWzEsMiwzLDQsNSw2LDcsOCw5LDEwXTtcblxuLy8gdmFyIGV2ZW5OdW1iZXJzID0gW107XG4vLyBmb3IgKGxldCBpID0gMDsgaSA8IG51bWJlcnMubGVuZ3RoOyBpKyspIHtcbi8vICAgaWYgKG51bWJlcnNbaV0gJSAyID09PSAwKSB7XG4vLyAgICAgZXZlbk51bWJlcnMucHVzaChudW1iZXJzW2ldKTtcbi8vICAgfVxuLy8gfVxuXG4gLy8gKioqKiBub3cgd2UnbGwgc2ltcGxpZnkgdGhlIGFib3ZlIGZ1bmN0aW9uIHVzaW5nIGZpbHRlciAqKioqXG5cbi8vIGNvbnN0IG51bWJlcnMgPSBbMSwyLDMsNCw1LDYsNyw4LDksMTBdO1xuXG4vLyBjb25zdCBpc0V2ZW4gPSB4ID0+IHggJSAyID09PSAwOyBcblxuLy8gY29uc3QgZXZlbk51bWJlcnMgPSBudW1iZXJzLmZpbHRlcihpc0V2ZW4pO1xuXG4vLyBjb25zb2xlLmxvZyhldmVuTnVtYmVycyk7XG5cblxuLy8gY29uc3Qgd29yZHMgPSBbXG4vLyAgICdoZWxsbycsXG4vLyAgICdnb29kYnllJyxcbi8vICAgJ3RoZScsXG4vLyAgICdBbnRhcmN0aWNhJyxcbi8vIF07XG5cbi8vIC8vIGNvbnN0IGlzTG9uZ2VyVGhhbjUgPSB3b3JkID0+IHdvcmQubGVuZ3RoID4gNTtcbi8vIC8vIGNvbnN0IGxvbmdXb3JkcyA9IHdvcmRzLmZpbHRlcihpc0xvbmdlclRoYW41KTtcbi8vIC8vIGNvbnNvbGUubG9nKGxvbmdXb3Jkcyk7XG5cblxuLy8gKioqKiogd3JpdGUgYSBoaWdoZXIgb3JkZXIgZnVuY3Rpb24gdG8gZG8gdGhpcyBtaXRoIG1pbmltYWwgY29kZSAqKioqKlxuXG4vLyBjb25zdCBjcmVhdGVMZW5ndGhUZXN0ID0gbWluTGVuZ3RoID0+IFxuLy8gICAgIHdvcmQgPT4gd29yZC5sZW5ndGggPiBtaW5MZW5ndGg7XG4vLyBjb25zdCBsb25nV29yZHMgPSB3b3Jkcy5maWx0ZXIoY3JlYXRlTGVuZ3RoVGVzdCg1KSk7XG4vLyBjb25zb2xlLmxvZyhsb25nV29yZHMpO1xuXG4vLyBUaGlzIGhlcmUgaXMgYSB2ZXJ5IG5pY2UgZnVuY3Rpb25hbCBjb2RlXG5cblxuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBFdmVyeS9zb21lXG5cbi8vIHdlIHBhc3MgdGhlbSBhIGZ1bmN0aW9uIHRoYXQgcmV1cm5zIGVpdGhlciB0cnVlIG9yIGZhbHNlLCBidXQgZXZlcnkvc29tZSByZXR1cm5zIGEgYm9vbGVhbiAob25seSB0cnVlIG9yIGZhbHNlKVxuXG4vLyAtLSBldmVyeSByZXR1cm5zIHRydWUgaWYgYW5kIG9ubHkgaWYgYSBnaXZlbiBjb25kaXRpb24gaXMgdHJ1ZSBmb3IgYWxsIGVsZW1lbnRzIGluIGFuIGFycmF5XG4vLyAtLSBzb21lIHJldHVybnMgdHJ1ZSBpZiB0aGUgY29uZGl0aW9ucyBhcmUgdHJ1ZSBhbnkgb2YgdGhlIGVsZW1lbnRzIGluIGFuIGFycmF5LCBmYWxzZSBpZiBhbmQgb25seSBpZiBldmVyeSBjb25kaXRpb24gaXMgZmFsc2UgZm9yIGFsbCBlbGVtZW50cyBpbiB0aGUgYXJyYXlcblxuLy8gZXhhbXBsZVxuXG5jb25zdCBlbXBsb3llZXMgPSBbe1xuICBuYW1lOiAnSm9obiBXaGl0dGVuJyxcbiAgc2FsYXJ5OiA5MDAwMCxcbn0sIHtcbiAgc2FtZTogJ0thdGhlcmluZSBTcGluZWxsYScsXG4gIHNhbGFyeTogMTIwMDAwLFxufSwge1xuICBuYW1lOiAnRnJhbm55IERhbnphJyxcbiAgc2FsYXJ5OiAxNTAwMDAwLFxufSwge1xuICBuYW1lOiAnTW9vblBpZSBEYW5nZXInLFxuICBzYWxhcnk6IDgzMDAwMCxcbn1dO1xuXG5jb25zdCBtYWtlc01vcmVUaGFuT25lTWlsbGlvbiA9IGVtcGxveWVlID0+XG4gICAgZW1wbG95ZWUuc2FsYXJ5ID4gMTAwMDAwMDtcbmNvbnN0IHJlc3VsdCA9IGVtcGxveWVlcy5zb21lKG1ha2VzTW9yZVRoYW5PbmVNaWxsaW9uKTtcblxuLy8gY29uc29sZS5sb2cocmVzdWx0KTtcblxuY29uc3QgZm9ybVZhbHVlcyA9IFtcbiAgJ01pa2UnLFxuICAnU3RlcGhlbicsXG4gICdDYWxpZm9ybmlhJyxcbiAgJ2RldmVsb3BlcicsXG5dO1xuXG5jb25zdCBpc05vdEVtcHR5ID0gc3RyaW5nID0+ICEhc3RyaW5nO1xuXG5jb25zdCBhbGxGaWVsZHNGaWxsZWQgPSBmb3JtVmFsdWVzLmV2ZXJ5KGlzTm90RW1wdHkpO1xuXG5jb25zb2xlLmxvZyhhbGxGaWVsZHNGaWxsZWQpO1xuXG5cblxuXG5cblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gU2xpY2luZ1xuXG5cblxuXG5cblxuIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUVBO0FBSUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFJQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBSUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBSUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBSUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFJQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBSUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUdBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUM7QUFFRDtBQUVBO0FBRUE7QUFFQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUdBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUlBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFFQTtBQUVBLElBQU1BLFNBQVMsR0FBRyxDQUFDO0VBQ2pCQyxJQUFJLEVBQUUsY0FEVztFQUVqQkMsTUFBTSxFQUFFO0FBRlMsQ0FBRCxFQUdmO0VBQ0RDLElBQUksRUFBRSxvQkFETDtFQUVERCxNQUFNLEVBQUU7QUFGUCxDQUhlLEVBTWY7RUFDREQsSUFBSSxFQUFFLGNBREw7RUFFREMsTUFBTSxFQUFFO0FBRlAsQ0FOZSxFQVNmO0VBQ0RELElBQUksRUFBRSxnQkFETDtFQUVEQyxNQUFNLEVBQUU7QUFGUCxDQVRlLENBQWxCOztBQWNBLElBQU1FLHVCQUF1QixHQUFHLFNBQTFCQSx1QkFBMEIsQ0FBQUMsUUFBUTtFQUFBLE9BQ3BDQSxRQUFRLENBQUNILE1BQVQsR0FBa0IsT0FEa0I7QUFBQSxDQUF4Qzs7QUFFQSxJQUFNSSxNQUFNLEdBQUdOLFNBQVMsQ0FBQ08sSUFBVixDQUFlSCx1QkFBZixDQUFmLEMsQ0FFQTs7QUFFQSxJQUFNSSxVQUFVLEdBQUcsQ0FDakIsTUFEaUIsRUFFakIsU0FGaUIsRUFHakIsWUFIaUIsRUFJakIsV0FKaUIsQ0FBbkI7O0FBT0EsSUFBTUMsVUFBVSxHQUFHLFNBQWJBLFVBQWEsQ0FBQUMsTUFBTTtFQUFBLE9BQUksQ0FBQyxDQUFDQSxNQUFOO0FBQUEsQ0FBekI7O0FBRUEsSUFBTUMsZUFBZSxHQUFHSCxVQUFVLENBQUNJLEtBQVgsQ0FBaUJILFVBQWpCLENBQXhCO0FBRUFJLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSCxlQUFaLEUsQ0FPQTtBQUNBIn0=","map":{"version":3,"names":["employees","name","salary","same","makesMoreThanOneMillion","employee","result","some","formValues","isNotEmpty","string","allFieldsFilled","every","console","log"],"sourceRoot":"/Users/BigBoi/Desktop/functional-ES6/","sources":["example.js"],"sourcesContent":["// const add = (x, y) => x + y;\n\n// const double = number => number * 2;\n// //as opposed to\n// // const double = function(number) {\n// //   return number * 2;\n// // }\n\n// const sayHello = () => console.log('Hello');\n\n// const getPersonData = () => ({\n//     name: 'John Whitten',\n//     age: 38,\n//     job: 'programmer',\n// });\n\n// const myArrowFunction = (arg1, arg2) => arg1 + arg2;\n\n// as opposed to\n// const myArrowFunction = (arg1, arg2) => {\n//   return arg1 + arg2;\n// }\n\n// const sayHello = name => console.log('Hello' + name);\n\n// const sayHello2 = sayHello;\n// sayHello2('John');\n\n// const myFunction = true \n//     ? () => console.log('First option')\n//     : () => console.log('Second option');\n\n// const DEVELOPMENT = true;\n\n// const fetchDataReal = () => {\n//   // time-intensive operations here\n// }\n\n// const fetchDataFake = () => ({\n//     name: 'John Whitten',\n//     age: 38,\n// });\n\n// const fetchData = DEVELOPMENT\n//     ? fetchDataFake\n//     : fetchDataReal;\n\n// const double = x => x * 2;\n// const subtractOne = x => -1;\n// const triple = x => x * 3;\n// const add5 = x => x + 5;\n\n// const myNumber = 42;\n\n// const doubled = double(myNumber);\n// const minusOne = subtractOne(doubled);\n// //..\n\n// const functionsArray = [\n//     double, \n//     subtractOne,\n//     triple,\n//     add5,\n//     Math.sqrt,\n//   ];\n\n// var number = 42;\n\n// functionsArray.forEach(func => number = func(number));\n\n// console.log(number);\n\n\n\n//--------------------------------------------------------\n// Passing functions as arguments\n\n// const add = (x, y) => x + y;\n// const subtract = (x, y) => x - y;\n\n// const combine2and3 = func =>\n//     func(2, 3);\n  \n// // combine2and3(add); // -> 2 + 3\n// combine2and3((x, y) => x + y);\n// // combine2and3(subtract); // -> 2 - 3 \n\n// combine2and3(Math.max) // -> 3\n\n\n\n//--------------------------------------------------------\n// Returning functions\n\n// const createPrinter = () => () => console.log(\"Hello\");\n// // //// which is an arrow syntax way of writing the following:\n// const createPrinter = function() {\n//   return function() {\n//     console.log(\"Hello\");\n//   }\n// } \n\n// const createMultiplier = y => x => x * y;\n\n// // const double = x => x * 2;\n// // const triple = x => x * 3;\n// // const quadruple = x => x * 4;\n\n// const double = createMultiplier(2);\n// const triple = createMultiplier(3);\n// const quadruple = createMultiplier(4);\n\n// double(3)\n\n\n\n//--------------------------------------------------------\n// Closure\n\n// const createPrinter = () => {\n//   const myFavoriteNumber = 13;\n\n//   return () => console.log(`My favorite number is ${myFavoriteNumber}`);\n// }\n\n// const printer = createPrinter();\n// printer();\n\n// // $ npx babel-node example.js\n\n\n\n//--------------------------------------------------------\n// Implement private variable\n\n// const Person = ({ name, age, job }) => {\n//     var _name = name;\n//     var _age = age;\n//     var _job = job;\n\n//     return { \n//         getName: () => _name,\n//         getAge: () => _age,\n//         getJob: () => _job,\n\n//         setJob: newJob => _job = newJob,\n//         setAge: newAge => _age = newAge,\n//     };\n// }\n\n// const me = Person({ name: 'John', age: 38, job: \"artist\"});\n// console.log(me.getJob());\n// // me._name; // -> undefined\n// me.setJob('web developer');\n// console.log(me.getJob());\n// // me._job; // -> undefined\n// console.log(me.getAge());\n// me.setAge(\"forever young\");\n// console.log(me.getAge());\n\n\n\n//--------------------------------------------------------\n// Higher-Order Functions\n\n// const divide = (x, y) => {\n//   if (y === 0) {\n//     console.log('Error: dividing by zero');\n//     return null;\n//   }\n\n//   return x / y;\n// }\n\n// Improve the above code using higher-order functions\n\n// const divide = (x, y) => x / y;\n\n// const secondArgumentIsntZero = func =>\n// (...args) => {\n//   if (args[1] === 0) {\n//     console.log('Error: dividing by zero');\n//     return null;\n//   }\n\n//   return func(...args);\n// }\n\n// const divideSafe = secondArgumentIsntZero(divide);\n\n// console.log(divideSafe(7, 0));\n// console.log(divideSafe(5, 3));\n\n\n\n//--------------------------------------------------------\n// JavaScript: function parts\n\n//--------------------------------------------------------\n// The spread operator\n\n// const person = {\n//   name: \"John Whitten\",\n//   age: 38,\n//   hairColor: \"red\",\n//   eyeColor: \"brown\",\n// };\n\n// const careerData = {\n//   title: \"instructor\",\n//   company: \"Oregon State University\",\n// };\n\n// const personWithCareerDate = {\n//   ...person,\n//   ...careerData,\n// };\n\n// const updates = {\n//   name: \"John john\"\n// }\n\n// const updatedPerson = {\n//   ...person,\n//   ...updates,\n// };\n\n// // // console.log(personWithCareerDate);\n// // console.log(updatedPerson);\n\n// const numbers = [1,2,3,4,5];\n// // instead of -> numbers.push(6);\n// const newNumbers = [\n//   ...numbers,\n//   6,\n// ];\n\n// console.log(newNumbers);\n\n\n\n//--------------------------------------------------------\n// Mapping\n\n// // How we used to double numbers in an array\n// const doubledNumbers = [];\n\n// for (let i = 0; i < doubledNumbers.length; i++) {\n//   const doubled = numbers[i] * 2;\n//   doubledNumbers.push(doubled);\n// }\n\n\n// const numbers = [1,2,3,4,5];\n// numbers.reverse();\n// console.log(numbers);\n\n\n\n// non-functional way of using mapping\n\n// const numbers = [1,2,3,4,5];\n// const doubledNumbers = [];\n// for (let i = 0; i < numbers.length; i++) {\n//   doubledNumbers.push(numbers[i] * 2);\n// }\n//  console.log(doubledNumbers);\n\n// ***** re-write the above functional in a functional programming way *****\n// const numbers = [1,2,3,4,5];\n// const double = x => x * 2;\n// const doubledNumbers = numbers.map(double);\n// console.log(doubledNumbers);\n\n\n\n//--------------------------------------------------------\n// Filtering\n\n// myArray.filter(element => {\n//   ...return true; // (or false)\n// });\n\n// the difference between filter and map is the TYPE of function we pass into it\n// in map we pass in a function that returns a value for each element in the array\n// for filter we pass in a function that returns either true or false\n\n\n// const numbers = [1,2,3,4,5,6,7,8,9,10];\n\n// var evenNumbers = [];\n// for (let i = 0; i < numbers.length; i++) {\n//   if (numbers[i] % 2 === 0) {\n//     evenNumbers.push(numbers[i]);\n//   }\n// }\n\n // **** now we'll simplify the above function using filter ****\n\n// const numbers = [1,2,3,4,5,6,7,8,9,10];\n\n// const isEven = x => x % 2 === 0; \n\n// const evenNumbers = numbers.filter(isEven);\n\n// console.log(evenNumbers);\n\n\n// const words = [\n//   'hello',\n//   'goodbye',\n//   'the',\n//   'Antarctica',\n// ];\n\n// // const isLongerThan5 = word => word.length > 5;\n// // const longWords = words.filter(isLongerThan5);\n// // console.log(longWords);\n\n\n// ***** write a higher order function to do this mith minimal code *****\n\n// const createLengthTest = minLength => \n//     word => word.length > minLength;\n// const longWords = words.filter(createLengthTest(5));\n// console.log(longWords);\n\n// This here is a very nice functional code\n\n\n\n//--------------------------------------------------------\n// Every/some\n\n// we pass them a function that reurns either true or false, but every/some returns a boolean (only true or false)\n\n// -- every returns true if and only if a given condition is true for all elements in an array\n// -- some returns true if the conditions are true any of the elements in an array, false if and only if every condition is false for all elements in the array\n\n// example\n\nconst employees = [{\n  name: 'John Whitten',\n  salary: 90000,\n}, {\n  same: 'Katherine Spinella',\n  salary: 120000,\n}, {\n  name: 'Franny Danza',\n  salary: 1500000,\n}, {\n  name: 'MoonPie Danger',\n  salary: 830000,\n}];\n\nconst makesMoreThanOneMillion = employee =>\n    employee.salary > 1000000;\nconst result = employees.some(makesMoreThanOneMillion);\n\n// console.log(result);\n\nconst formValues = [\n  'Mike',\n  'Stephen',\n  'California',\n  'developer',\n];\n\nconst isNotEmpty = string => !!string;\n\nconst allFieldsFilled = formValues.every(isNotEmpty);\n\nconsole.log(allFieldsFilled);\n\n\n\n\n\n\n//--------------------------------------------------------\n// Slicing\n\n\n\n\n\n\n"],"mappingsjBC,IAAI,EAAE,cADW;EAEjBC,MAAM,EAAE;AAFS,CAAD,EAGf;EACDC,IAAI,EAAE,oBADL;EAEDD,MAAM,EAAE;AAFP,CAHe,EAMf;EACDD,IAAI,EAAE,cADL;EAEDC,MAAM,EAAE;AAFP,CANe,EASf;EACDD,IAAI,EAAE,gBADL;EAEDC,MAAM,EAAE;AAFP,CATe,CAAlB;;AAcA,IAAME,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,QAAQ;EAAA,OACpCA,QAAQ,CAACH,MAAT,GAAkB,OADkB;AAAA,CAAxC;;AAEA,IAAMI,MAAM,GAAGN,SAAS,CAACO,IAAV,CAAeH,uBAAf,CAAf,C,CAEA;;AAEA,IAAMI,UAAU,GAAG,CACjB,MADiB,EAEjB,SAFiB,EAGjB,YAHiB,EAIjB,WAJiB,CAAnB;;AAOA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,MAAM;EAAA,OAAI,CAAC,CAACA,MAAN;AAAA,CAAzB;;AAEA,IAAMC,eAAe,GAAGH,UAAU,CAACI,KAAX,CAAiBH,UAAjB,CAAxB;AAEAI,OAAO,CAACC,GAAR,CAAYH,eAAZ,E,CAOA;AACA"}},"mtime":1653072237458},"{\"assumptions\":{},\"sourceRoot\":\"/Users/BigBoi/Desktop/functional-ES6/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/BigBoi/Desktop/functional-ES6\",\"filename\":\"/Users/BigBoi/Desktop/functional-ES6/exampleCh03.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/BigBoi/Desktop/functional-ES6\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.17.10:development":{"value":{"code":"\"use strict\";\n\n// const add = (x, y) => x + y;\nvar _require = require(\"@babel/preset-env/lib/normalize-options\"),\n    validateUseBuiltInsOption = _require.validateUseBuiltInsOption; // const double = number => number * 2;\n// //as opposed to\n// // const double = function(number) {\n// //   return number * 2;\n// // }\n// const sayHello = () => console.log('Hello');\n// const getPersonData = () => ({\n//     name: 'John Whitten',\n//     age: 38,\n//     job: 'programmer',\n// });\n// const myArrowFunction = (arg1, arg2) => arg1 + arg2;\n// as opposed to\n// const myArrowFunction = (arg1, arg2) => {\n//   return arg1 + arg2;\n// }\n// const sayHello = name => console.log('Hello' + name);\n// const sayHello2 = sayHello;\n// sayHello2('John');\n// const myFunction = true \n//     ? () => console.log('First option')\n//     : () => console.log('Second option');\n// const DEVELOPMENT = true;\n// const fetchDataReal = () => {\n//   // time-intensive operations here\n// }\n// const fetchDataFake = () => ({\n//     name: 'John Whitten',\n//     age: 38,\n// });\n// const fetchData = DEVELOPMENT\n//     ? fetchDataFake\n//     : fetchDataReal;\n// const double = x => x * 2;\n// const subtractOne = x => -1;\n// const triple = x => x * 3;\n// const add5 = x => x + 5;\n// const myNumber = 42;\n// const doubled = double(myNumber);\n// const minusOne = subtractOne(doubled);\n// //..\n// const functionsArray = [\n//     double, \n//     subtractOne,\n//     triple,\n//     add5,\n//     Math.sqrt,\n//   ];\n// var number = 42;\n// functionsArray.forEach(func => number = func(number));\n// console.log(number);\n//--------------------------------------------------------\n// Passing functions as arguments\n// const add = (x, y) => x + y;\n// const subtract = (x, y) => x - y;\n// const combine2and3 = func =>\n//     func(2, 3);\n// // combine2and3(add); // -> 2 + 3\n// combine2and3((x, y) => x + y);\n// // combine2and3(subtract); // -> 2 - 3 \n// combine2and3(Math.max) // -> 3\n//--------------------------------------------------------\n// Returning functions\n// const createPrinter = () => () => console.log(\"Hello\");\n// // //// which is an arrow syntax way of writing the following:\n// const createPrinter = function() {\n//   return function() {\n//     console.log(\"Hello\");\n//   }\n// } \n// const createMultiplier = y => x => x * y;\n// // const double = x => x * 2;\n// // const triple = x => x * 3;\n// // const quadruple = x => x * 4;\n// const double = createMultiplier(2);\n// const triple = createMultiplier(3);\n// const quadruple = createMultiplier(4);\n// double(3)\n//--------------------------------------------------------\n// Closure\n// const createPrinter = () => {\n//   const myFavoriteNumber = 13;\n//   return () => console.log(`My favorite number is ${myFavoriteNumber}`);\n// }\n// const printer = createPrinter();\n// printer();\n// // $ npx babel-node example.js\n//--------------------------------------------------------\n// Implement private variable\n// const Person = ({ name, age, job }) => {\n//     var _name = name;\n//     var _age = age;\n//     var _job = job;\n//     return { \n//         getName: () => _name,\n//         getAge: () => _age,\n//         getJob: () => _job,\n//         setJob: newJob => _job = newJob,\n//         setAge: newAge => _age = newAge,\n//     };\n// }\n// const me = Person({ name: 'John', age: 38, job: \"artist\"});\n// console.log(me.getJob());\n// // me._name; // -> undefined\n// me.setJob('web developer');\n// console.log(me.getJob());\n// // me._job; // -> undefined\n// console.log(me.getAge());\n// me.setAge(\"forever young\");\n// console.log(me.getAge());\n//--------------------------------------------------------\n// Higher-Order Functions\n// const divide = (x, y) => {\n//   if (y === 0) {\n//     console.log('Error: dividing by zero');\n//     return null;\n//   }\n//   return x / y;\n// }\n// Improve the above code using higher-order functions\n// const divide = (x, y) => x / y;\n// const secondArgumentIsntZero = func =>\n// (...args) => {\n//   if (args[1] === 0) {\n//     console.log('Error: dividing by zero');\n//     return null;\n//   }\n//   return func(...args);\n// }\n// const divideSafe = secondArgumentIsntZero(divide);\n// console.log(divideSafe(7, 0));\n// console.log(divideSafe(5, 3));\n//--------------------------------------------------------\n// JavaScript: function parts\n//--------------------------------------------------------\n// The spread operator\n// const person = {\n//   name: \"John Whitten\",\n//   age: 38,\n//   hairColor: \"red\",\n//   eyeColor: \"brown\",\n// };\n// const careerData = {\n//   title: \"instructor\",\n//   company: \"Oregon State University\",\n// };\n// const personWithCareerDate = {\n//   ...person,\n//   ...careerData,\n// };\n// const updates = {\n//   name: \"John john\"\n// }\n// const updatedPerson = {\n//   ...person,\n//   ...updates,\n// };\n// // // console.log(personWithCareerDate);\n// // console.log(updatedPerson);\n// const numbers = [1,2,3,4,5];\n// // instead of -> numbers.push(6);\n// const newNumbers = [\n//   ...numbers,\n//   6,\n// ];\n// console.log(newNumbers);\n//--------------------------------------------------------\n// Mapping\n// // How we used to double numbers in an array\n// const doubledNumbers = [];\n// for (let i = 0; i < doubledNumbers.length; i++) {\n//   const doubled = numbers[i] * 2;\n//   doubledNumbers.push(doubled);\n// }\n// const numbers = [1,2,3,4,5];\n// numbers.reverse();\n// console.log(numbers);\n// non-functional way of using mapping\n// const numbers = [1,2,3,4,5];\n// const doubledNumbers = [];\n// for (let i = 0; i < numbers.length; i++) {\n//   doubledNumbers.push(numbers[i] * 2);\n// }\n//  console.log(doubledNumbers);\n// ***** re-write the above functional in a functional programming way *****\n// const numbers = [1,2,3,4,5];\n// const double = x => x * 2;\n// const doubledNumbers = numbers.map(double);\n// console.log(doubledNumbers);\n//--------------------------------------------------------\n// Filtering\n// myArray.filter(element => {\n//   ...return true; // (or false)\n// });\n// the difference between filter and map is the TYPE of function we pass into it\n// in map we pass in a function that returns a value for each element in the array\n// for filter we pass in a function that returns either true or false\n// const numbers = [1,2,3,4,5,6,7,8,9,10];\n// var evenNumbers = [];\n// for (let i = 0; i < numbers.length; i++) {\n//   if (numbers[i] % 2 === 0) {\n//     evenNumbers.push(numbers[i]);\n//   }\n// }\n// **** now we'll simplify the above function using filter ****\n// const numbers = [1,2,3,4,5,6,7,8,9,10];\n// const isEven = x => x % 2 === 0; \n// const evenNumbers = numbers.filter(isEven);\n// console.log(evenNumbers);\n// const words = [\n//   'hello',\n//   'goodbye',\n//   'the',\n//   'Antarctica',\n// ];\n// // const isLongerThan5 = word => word.length > 5;\n// // const longWords = words.filter(isLongerThan5);\n// // console.log(longWords);\n// ***** write a higher order function to do this mith minimal code *****\n// const createLengthTest = minLength => \n//     word => word.length > minLength;\n// const longWords = words.filter(createLengthTest(5));\n// console.log(longWords);\n// This here is a very nice functional code\n//--------------------------------------------------------\n// Every/some\n// we pass them a function that reurns either true or false, but every/some returns a boolean (only true or false)\n// -- every returns true if and only if a given condition is true for all elements in an array\n// -- some returns true if the conditions are true any of the elements in an array, false if and only if every condition is false for all elements in the array\n// example\n// const employees = [{\n//   name: 'John Whitten',\n//   salary: 90000,\n// }, {\n//   same: 'Katherine Spinella',\n//   salary: 120000,\n// }, {\n//   name: 'Franny Danza',\n//   salary: 1500000,\n// }, {\n//   name: 'MoonPie Danger',\n//   salary: 830000,\n// }];\n// const makesMoreThanOneMillion = employee =>\n//     employee.salary > 1000000;\n// const result = employees.some(makesMoreThanOneMillion);\n// console.log(result);\n// //------next example function-------//\n// const formValues = [\n//   'Mike',\n//   'Stephen',\n//   'California',\n//   'developer',\n// ];\n// const isNotEmpty = string => !!string;\n// const allFieldsFilled = formValues.every(isNotEmpty);\n// console.log(allFieldsFilled);\n//--------------------------------------------------------\n// Slicing\n// not a higher order function, does nat take a function as an argument, has important way to work with arrays\n// sort(), reverse(), push(), pop() all mutate an Array, which is prohibited in functional programming\n// turn mutating functions into non-mutating function using SLICE()\n// slice makes a copy of an array\n// const numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n// console.log(numbers.slice().reverse());\n// console.log(numbers);\n//--------------------------------------------------------\n// Sorting\n// .sort is a mutating function!\n//----!!!----myArray.slice().sort();-----!!!---- \n// const mixedUpNumbers = [10, 5, 7, 4, 1, 9, 2, 6, 3, 8];\n// const ascending = (a, b) => {\n//     if (a < b) return -1;\n//     if (a > b) return 1;\n//     return 0;\n// }\n// const sortedNumbers = mixedUpNumbers.slice().sort(ascending);\n// console.log(sortedNumbers);\n// **** in order to sort in descending order, we'll just need to change the > and < around *****\n// const mixedUpNumbers = [10, 5, 7, 4, 1, 9, 2, 6, 3, 8];\n// const descending = (a, b) => {\n//   if (a > b) return -1;\n//   if (a < b) return 1;\n//   return 0;\n// }\n// const sortedNumbers = mixedUpNumbers.slice().sort(descending);\n// console.log(sortedNumbers);\n//--------------------------------------------------------\n// Reducing\n// reduce() takes an array of data and reduce it to a single validateUseBuiltInsOption, like a sum or average\n// myArray.reduce((acc, element) => \n//   ...\n//   return ...\n// );\n// const sum = myArray.reduce((acc, element) => {\n//   return acc + element, 0);\n// }\n// Find the sum of an array of numbers\n// const numbers = [5, 7, 2, 40, 23, 14, 8, 4, 11];\n// const sum = numbers.reduce((acc, x) => {\n//     console.log(`acc is ${acc}`);\n//     console.log(`x is ${x}`);\n//     return acc + x;\n// }, 0)\n// console.log(sum);\n// Find the product of an array of numbers\n\n\nvar numbers = [5, 7, 2, 40, 23, 14, 8, 4, 11];\nvar product = numbers.reduce(function (acc, x) {\n  console.log(\"acc is \".concat(acc));\n  console.log(\"x is \".concat(x));\n  return acc * x;\n}, 1);\nconsole.log(product); //--------------------------------------------------------\n// Combining Functions\n//--------------------------------------------------------\n// Challenge: Recreate the map function\n//--------------------------------------------------------\n// Solution: Recreate the map function\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["require","validateUseBuiltInsOption","numbers","product","reduce","acc","x","console","log"],"sourceRoot":"/Users/BigBoi/Desktop/functional-ES6/","sources":["exampleCh03.js"],"sourcesContent":["// const add = (x, y) => x + y;\n\nconst { validateUseBuiltInsOption } = require(\"@babel/preset-env/lib/normalize-options\")\n\n// const double = number => number * 2;\n// //as opposed to\n// // const double = function(number) {\n// //   return number * 2;\n// // }\n\n// const sayHello = () => console.log('Hello');\n\n// const getPersonData = () => ({\n//     name: 'John Whitten',\n//     age: 38,\n//     job: 'programmer',\n// });\n\n// const myArrowFunction = (arg1, arg2) => arg1 + arg2;\n\n// as opposed to\n// const myArrowFunction = (arg1, arg2) => {\n//   return arg1 + arg2;\n// }\n\n// const sayHello = name => console.log('Hello' + name);\n\n// const sayHello2 = sayHello;\n// sayHello2('John');\n\n// const myFunction = true \n//     ? () => console.log('First option')\n//     : () => console.log('Second option');\n\n// const DEVELOPMENT = true;\n\n// const fetchDataReal = () => {\n//   // time-intensive operations here\n// }\n\n// const fetchDataFake = () => ({\n//     name: 'John Whitten',\n//     age: 38,\n// });\n\n// const fetchData = DEVELOPMENT\n//     ? fetchDataFake\n//     : fetchDataReal;\n\n// const double = x => x * 2;\n// const subtractOne = x => -1;\n// const triple = x => x * 3;\n// const add5 = x => x + 5;\n\n// const myNumber = 42;\n\n// const doubled = double(myNumber);\n// const minusOne = subtractOne(doubled);\n// //..\n\n// const functionsArray = [\n//     double, \n//     subtractOne,\n//     triple,\n//     add5,\n//     Math.sqrt,\n//   ];\n\n// var number = 42;\n\n// functionsArray.forEach(func => number = func(number));\n\n// console.log(number);\n\n\n\n//--------------------------------------------------------\n// Passing functions as arguments\n\n// const add = (x, y) => x + y;\n// const subtract = (x, y) => x - y;\n\n// const combine2and3 = func =>\n//     func(2, 3);\n  \n// // combine2and3(add); // -> 2 + 3\n// combine2and3((x, y) => x + y);\n// // combine2and3(subtract); // -> 2 - 3 \n\n// combine2and3(Math.max) // -> 3\n\n\n\n//--------------------------------------------------------\n// Returning functions\n\n// const createPrinter = () => () => console.log(\"Hello\");\n// // //// which is an arrow syntax way of writing the following:\n// const createPrinter = function() {\n//   return function() {\n//     console.log(\"Hello\");\n//   }\n// } \n\n// const createMultiplier = y => x => x * y;\n\n// // const double = x => x * 2;\n// // const triple = x => x * 3;\n// // const quadruple = x => x * 4;\n\n// const double = createMultiplier(2);\n// const triple = createMultiplier(3);\n// const quadruple = createMultiplier(4);\n\n// double(3)\n\n\n\n//--------------------------------------------------------\n// Closure\n\n// const createPrinter = () => {\n//   const myFavoriteNumber = 13;\n\n//   return () => console.log(`My favorite number is ${myFavoriteNumber}`);\n// }\n\n// const printer = createPrinter();\n// printer();\n\n// // $ npx babel-node example.js\n\n\n\n//--------------------------------------------------------\n// Implement private variable\n\n// const Person = ({ name, age, job }) => {\n//     var _name = name;\n//     var _age = age;\n//     var _job = job;\n\n//     return { \n//         getName: () => _name,\n//         getAge: () => _age,\n//         getJob: () => _job,\n\n//         setJob: newJob => _job = newJob,\n//         setAge: newAge => _age = newAge,\n//     };\n// }\n\n// const me = Person({ name: 'John', age: 38, job: \"artist\"});\n// console.log(me.getJob());\n// // me._name; // -> undefined\n// me.setJob('web developer');\n// console.log(me.getJob());\n// // me._job; // -> undefined\n// console.log(me.getAge());\n// me.setAge(\"forever young\");\n// console.log(me.getAge());\n\n\n\n//--------------------------------------------------------\n// Higher-Order Functions\n\n// const divide = (x, y) => {\n//   if (y === 0) {\n//     console.log('Error: dividing by zero');\n//     return null;\n//   }\n\n//   return x / y;\n// }\n\n// Improve the above code using higher-order functions\n\n// const divide = (x, y) => x / y;\n\n// const secondArgumentIsntZero = func =>\n// (...args) => {\n//   if (args[1] === 0) {\n//     console.log('Error: dividing by zero');\n//     return null;\n//   }\n\n//   return func(...args);\n// }\n\n// const divideSafe = secondArgumentIsntZero(divide);\n\n// console.log(divideSafe(7, 0));\n// console.log(divideSafe(5, 3));\n\n\n\n//--------------------------------------------------------\n// JavaScript: function parts\n\n//--------------------------------------------------------\n// The spread operator\n\n// const person = {\n//   name: \"John Whitten\",\n//   age: 38,\n//   hairColor: \"red\",\n//   eyeColor: \"brown\",\n// };\n\n// const careerData = {\n//   title: \"instructor\",\n//   company: \"Oregon State University\",\n// };\n\n// const personWithCareerDate = {\n//   ...person,\n//   ...careerData,\n// };\n\n// const updates = {\n//   name: \"John john\"\n// }\n\n// const updatedPerson = {\n//   ...person,\n//   ...updates,\n// };\n\n// // // console.log(personWithCareerDate);\n// // console.log(updatedPerson);\n\n// const numbers = [1,2,3,4,5];\n// // instead of -> numbers.push(6);\n// const newNumbers = [\n//   ...numbers,\n//   6,\n// ];\n\n// console.log(newNumbers);\n\n\n\n//--------------------------------------------------------\n// Mapping\n\n// // How we used to double numbers in an array\n// const doubledNumbers = [];\n\n// for (let i = 0; i < doubledNumbers.length; i++) {\n//   const doubled = numbers[i] * 2;\n//   doubledNumbers.push(doubled);\n// }\n\n\n// const numbers = [1,2,3,4,5];\n// numbers.reverse();\n// console.log(numbers);\n\n\n\n// non-functional way of using mapping\n\n// const numbers = [1,2,3,4,5];\n// const doubledNumbers = [];\n// for (let i = 0; i < numbers.length; i++) {\n//   doubledNumbers.push(numbers[i] * 2);\n// }\n//  console.log(doubledNumbers);\n\n// ***** re-write the above functional in a functional programming way *****\n// const numbers = [1,2,3,4,5];\n// const double = x => x * 2;\n// const doubledNumbers = numbers.map(double);\n// console.log(doubledNumbers);\n\n\n\n//--------------------------------------------------------\n// Filtering\n\n// myArray.filter(element => {\n//   ...return true; // (or false)\n// });\n\n// the difference between filter and map is the TYPE of function we pass into it\n// in map we pass in a function that returns a value for each element in the array\n// for filter we pass in a function that returns either true or false\n\n\n// const numbers = [1,2,3,4,5,6,7,8,9,10];\n\n// var evenNumbers = [];\n// for (let i = 0; i < numbers.length; i++) {\n//   if (numbers[i] % 2 === 0) {\n//     evenNumbers.push(numbers[i]);\n//   }\n// }\n\n // **** now we'll simplify the above function using filter ****\n\n// const numbers = [1,2,3,4,5,6,7,8,9,10];\n\n// const isEven = x => x % 2 === 0; \n\n// const evenNumbers = numbers.filter(isEven);\n\n// console.log(evenNumbers);\n\n\n// const words = [\n//   'hello',\n//   'goodbye',\n//   'the',\n//   'Antarctica',\n// ];\n\n// // const isLongerThan5 = word => word.length > 5;\n// // const longWords = words.filter(isLongerThan5);\n// // console.log(longWords);\n\n\n// ***** write a higher order function to do this mith minimal code *****\n\n// const createLengthTest = minLength => \n//     word => word.length > minLength;\n// const longWords = words.filter(createLengthTest(5));\n// console.log(longWords);\n\n// This here is a very nice functional code\n\n\n\n//--------------------------------------------------------\n// Every/some\n\n// we pass them a function that reurns either true or false, but every/some returns a boolean (only true or false)\n\n// -- every returns true if and only if a given condition is true for all elements in an array\n// -- some returns true if the conditions are true any of the elements in an array, false if and only if every condition is false for all elements in the array\n\n// example\n\n// const employees = [{\n//   name: 'John Whitten',\n//   salary: 90000,\n// }, {\n//   same: 'Katherine Spinella',\n//   salary: 120000,\n// }, {\n//   name: 'Franny Danza',\n//   salary: 1500000,\n// }, {\n//   name: 'MoonPie Danger',\n//   salary: 830000,\n// }];\n\n// const makesMoreThanOneMillion = employee =>\n//     employee.salary > 1000000;\n// const result = employees.some(makesMoreThanOneMillion);\n\n// console.log(result);\n\n// //------next example function-------//\n\n// const formValues = [\n//   'Mike',\n//   'Stephen',\n//   'California',\n//   'developer',\n// ];\n\n// const isNotEmpty = string => !!string;\n// const allFieldsFilled = formValues.every(isNotEmpty);\n// console.log(allFieldsFilled);\n\n\n\n//--------------------------------------------------------\n// Slicing\n\n// not a higher order function, does nat take a function as an argument, has important way to work with arrays\n\n// sort(), reverse(), push(), pop() all mutate an Array, which is prohibited in functional programming\n\n// turn mutating functions into non-mutating function using SLICE()\n\n// slice makes a copy of an array\n\n// const numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n// console.log(numbers.slice().reverse());\n// console.log(numbers);\n\n\n\n\n//--------------------------------------------------------\n// Sorting\n\n// .sort is a mutating function!\n\n//----!!!----myArray.slice().sort();-----!!!---- \n\n\n// const mixedUpNumbers = [10, 5, 7, 4, 1, 9, 2, 6, 3, 8];\n// const ascending = (a, b) => {\n//     if (a < b) return -1;\n//     if (a > b) return 1;\n//     return 0;\n// }\n// const sortedNumbers = mixedUpNumbers.slice().sort(ascending);\n// console.log(sortedNumbers);\n\n// **** in order to sort in descending order, we'll just need to change the > and < around *****\n\n// const mixedUpNumbers = [10, 5, 7, 4, 1, 9, 2, 6, 3, 8];\n// const descending = (a, b) => {\n//   if (a > b) return -1;\n//   if (a < b) return 1;\n//   return 0;\n// }\n// const sortedNumbers = mixedUpNumbers.slice().sort(descending);\n// console.log(sortedNumbers);\n\n\n\n//--------------------------------------------------------\n// Reducing\n\n// reduce() takes an array of data and reduce it to a single validateUseBuiltInsOption, like a sum or average\n\n// myArray.reduce((acc, element) => \n//   ...\n//   return ...\n// );\n\n\n// const sum = myArray.reduce((acc, element) => {\n//   return acc + element, 0);\n// }\n\n\n\n// Find the sum of an array of numbers\n\n// const numbers = [5, 7, 2, 40, 23, 14, 8, 4, 11];\n// const sum = numbers.reduce((acc, x) => {\n//     console.log(`acc is ${acc}`);\n//     console.log(`x is ${x}`);\n//     return acc + x;\n// }, 0)\n// console.log(sum);\n\n\n// Find the product of an array of numbers\n\nconst numbers = [5, 7, 2, 40, 23, 14, 8, 4, 11];\n\nconst product = numbers.reduce((acc, x) => {\n    console.log(`acc is ${acc}`);\n    console.log(`x is ${x}`);\n\n    return acc * x;\n}, 1)\n\nconsole.log(product);\n\n\n\n\n\n//--------------------------------------------------------\n// Combining Functions\n\n\n//--------------------------------------------------------\n// Challenge: Recreate the map function\n\n//--------------------------------------------------------\n// Solution: Recreate the map function\n\n\n\n\n"],"mappings":";;AAAA;AAEA,eAAsCA,OAAO,CAAC,yCAAD,CAA7C;AAAA,IAAQC,yBAAR,YAAQA,yc,EAAd,EAAkB,EAAlB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,EAA5B,CAAhB;AAEA,IAAMC,OAAO,GAAGD,OAAO,CAACE,MAAR,CAAe,UAACC,GAAD,EAAMC,CAAN,EAAY;EACvCC,OAAO,CAACC,GAAR,kBAAsBH,GAAtB;EACAE,OAAO,CAACC,GAAR,gBAAoBF,CAApB;EAEA,OAAOD,GAAG,GAAGC,CAAb;AACH,CALe,EAKb,CALa,CAAhB;AAOAC,OAAO,CAACC,GAAR,CAAYL,OAAZ,E,CAMA;AACA;AAGA;AACA;AAEA;AACA"}},"mtime":1653074455436}}