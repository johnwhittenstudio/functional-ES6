{"{\"assumptions\":{},\"sourceRoot\":\"/Users/BigBoi/Desktop/functional-ES6/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/BigBoi/Desktop/functional-ES6\",\"filename\":\"/Users/BigBoi/Desktop/functional-ES6/hello-world.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/BigBoi/Desktop/functional-ES6\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.17.10:development":{"value":{"code":"\"use strict\";\n\nvar sayHello = function sayHello(name) {\n  return console.log(\"Hello \".concat(name));\n};\n\nsayHello('John');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzYXlIZWxsbyIsIm5hbWUiLCJjb25zb2xlIiwibG9nIl0sInNvdXJjZVJvb3QiOiIvVXNlcnMvQmlnQm9pL0Rlc2t0b3AvZnVuY3Rpb25hbC1FUzYvIiwic291cmNlcyI6WyJoZWxsby13b3JsZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzYXlIZWxsbyA9IG5hbWUgPT4gY29uc29sZS5sb2coYEhlbGxvICR7bmFtZX1gKTtcblxuc2F5SGVsbG8oJ0pvaG4nKSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxRQUFRLEdBQUcsU0FBWEEsUUFBVyxDQUFBQyxJQUFJO0VBQUEsT0FBSUMsT0FBTyxDQUFDQyxHQUFSLGlCQUFxQkYsSUFBckIsRUFBSjtBQUFBLENBQXJCOztBQUVBRCxRQUFRLENBQUMsTUFBRCxDQUFSIn0=","map":{"version":3,"names":["sayHello","name","console","log"],"sourceRoot":"/Users/BigBoi/Desktop/functional-ES6/","sources":["hello-world.js"],"sourcesContent":["const sayHello = name => console.log(`Hello ${name}`);\n\nsayHello('John')"],"mappings":";;AAAA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAAAC,IAAI;EAAA,OAAIC,OAAO,CAACC,GAAR,iBAAqBF,IAArB,EAAJ;AAAA,CAArB;;AAEAD,QAAQ,CAAC,MAAD,CAAR"}},"mtime":1652388962006},"{\"assumptions\":{},\"sourceRoot\":\"/Users/BigBoi/Desktop/functional-ES6/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/BigBoi/Desktop/functional-ES6\",\"filename\":\"/Users/BigBoi/Desktop/functional-ES6/example.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/BigBoi/Desktop/functional-ES6\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.17.10:development":{"value":{"code":"\"use strict\";\n\n// const add = (x, y) => x + y;\n// const double = number => number * 2;\n// //as opposed to\n// // const double = function(number) {\n// //   return number * 2;\n// // }\n// const sayHello = () => console.log('Hello');\n// const getPersonData = () => ({\n//     name: 'John Whitten',\n//     age: 38,\n//     job: 'programmer',\n// });\n// const myArrowFunction = (arg1, arg2) => arg1 + arg2;\n// as opposed to\n// const myArrowFunction = (arg1, arg2) => {\n//   return arg1 + arg2;\n// }\n// const sayHello = name => console.log('Hello' + name);\n// const sayHello2 = sayHello;\n// sayHello2('John');\n// const myFunction = true \n//     ? () => console.log('First option')\n//     : () => console.log('Second option');\n// const DEVELOPMENT = true;\n// const fetchDataReal = () => {\n//   // time-intensive operations here\n// }\n// const fetchDataFake = () => ({\n//     name: 'John Whitten',\n//     age: 38,\n// });\n// const fetchData = DEVELOPMENT\n//     ? fetchDataFake\n//     : fetchDataReal;\n// const double = x => x * 2;\n// const subtractOne = x => -1;\n// const triple = x => x * 3;\n// const add5 = x => x + 5;\n// const myNumber = 42;\n// const doubled = double(myNumber);\n// const minusOne = subtractOne(doubled);\n// //..\n// const functionsArray = [\n//     double, \n//     subtractOne,\n//     triple,\n//     add5,\n//     Math.sqrt,\n//   ];\n// var number = 42;\n// functionsArray.forEach(func => number = func(number));\n// console.log(number);\n//--------------------------------------------------------\n// Passing functions as arguments\n// const add = (x, y) => x + y;\n// const subtract = (x, y) => x - y;\n// const combine2and3 = func =>\n//     func(2, 3);\n// // combine2and3(add); // -> 2 + 3\n// combine2and3((x, y) => x + y);\n// // combine2and3(subtract); // -> 2 - 3 \n// combine2and3(Math.max) // -> 3\n//--------------------------------------------------------\n// Returning functions\n// const createPrinter = () => () => console.log(\"Hello\");\n// // //// which is an arrow syntax way of writing the following:\n// const createPrinter = function() {\n//   return function() {\n//     console.log(\"Hello\");\n//   }\n// } \n// const createMultiplier = y => x => x * y;\n// // const double = x => x * 2;\n// // const triple = x => x * 3;\n// // const quadruple = x => x * 4;\n// const double = createMultiplier(2);\n// const triple = createMultiplier(3);\n// const quadruple = createMultiplier(4);\n// double(3)\n//--------------------------------------------------------\n// Closure\n// const createPrinter = () => {\n//   const myFavoriteNumber = 13;\n//   return () => console.log(`My favorite number is ${myFavoriteNumber}`);\n// }\n// const printer = createPrinter();\n// printer();\n// // $ npx babel-node example.js\n//--------------------------------------------------------\n// Implement private variable\n// const Person = ({ name, age, job }) => {\n//     var _name = name;\n//     var _age = age;\n//     var _job = job;\n//     return { \n//         getName: () => _name,\n//         getAge: () => _age,\n//         getJob: () => _job,\n//         setJob: newJob => _job = newJob,\n//         setAge: newAge => _age = newAge,\n//     };\n// }\n// const me = Person({ name: 'John', age: 38, job: \"artist\"});\n// console.log(me.getJob());\n// // me._name; // -> undefined\n// me.setJob('web developer');\n// console.log(me.getJob());\n// // me._job; // -> undefined\n// console.log(me.getAge());\n// me.setAge(\"forever young\");\n// console.log(me.getAge());\n//--------------------------------------------------------\n// Higher-Order Functions\n// const divide = (x, y) => {\n//   if (y === 0) {\n//     console.log('Error: dividing by zero');\n//     return null;\n//   }\n//   return x / y;\n// }\n// Improve the above code using higher-order functions\n// const divide = (x, y) => x / y;\n// const secondArgumentIsntZero = func =>\n// (...args) => {\n//   if (args[1] === 0) {\n//     console.log('Error: dividing by zero');\n//     return null;\n//   }\n//   return func(...args);\n// }\n// const divideSafe = secondArgumentIsntZero(divide);\n// console.log(divideSafe(7, 0));\n// console.log(divideSafe(5, 3));\n//--------------------------------------------------------\n// JavaScript: function parts\n//--------------------------------------------------------\n// The spread operator\n// const person = {\n//   name: \"John Whitten\",\n//   age: 38,\n//   hairColor: \"red\",\n//   eyeColor: \"brown\",\n// };\n// const careerData = {\n//   title: \"instructor\",\n//   company: \"Oregon State University\",\n// };\n// const personWithCareerDate = {\n//   ...person,\n//   ...careerData,\n// };\n// const updates = {\n//   name: \"John john\"\n// }\n// const updatedPerson = {\n//   ...person,\n//   ...updates,\n// };\n// // // console.log(personWithCareerDate);\n// // console.log(updatedPerson);\n// const numbers = [1,2,3,4,5];\n// // instead of -> numbers.push(6);\n// const newNumbers = [\n//   ...numbers,\n//   6,\n// ];\n// console.log(newNumbers);\n//--------------------------------------------------------\n// Mapping\n// // How we used to double numbers in an array\n// const doubledNumbers = [];\n// for (let i = 0; i < doubledNumbers.length; i++) {\n//   const doubled = numbers[i] * 2;\n//   doubledNumbers.push(doubled);\n// }\n// const numbers = [1,2,3,4,5];\n// numbers.reverse();\n// console.log(numbers);\n// non-functional way of using mapping\n// const numbers = [1,2,3,4,5];\n// const doubledNumbers = [];\n// for (let i = 0; i < numbers.length; i++) {\n//   doubledNumbers.push(numbers[i] * 2);\n// }\n//  console.log(doubledNumbers);\n// ***** re-write the above functional in a functional programming way *****\n// const numbers = [1,2,3,4,5];\n// const double = x => x * 2;\n// const doubledNumbers = numbers.map(double);\n// console.log(doubledNumbers);\n//--------------------------------------------------------\n// Filtering\n// myArray.filter(element => {\n//   ...return true; // (or false)\n// });\n// the difference between filter and map is the TYPE of function we pass into it\n// in map we pass in a function that returns a value for each element in the array\n// for filter we pass in a function that returns either true or false\n// const numbers = [1,2,3,4,5,6,7,8,9,10];\n// var evenNumbers = [];\n// for (let i = 0; i < numbers.length; i++) {\n//   if (numbers[i] % 2 === 0) {\n//     evenNumbers.push(numbers[i]);\n//   }\n// }\n// **** now we'll simplify the above function using filter ****\n// const numbers = [1,2,3,4,5,6,7,8,9,10];\n// const isEven = x => x % 2 === 0; \n// const evenNumbers = numbers.filter(isEven);\n// console.log(evenNumbers);\n// const words = [\n//   'hello',\n//   'goodbye',\n//   'the',\n//   'Antarctica',\n// ];\n// // const isLongerThan5 = word => word.length > 5;\n// // const longWords = words.filter(isLongerThan5);\n// // console.log(longWords);\n// ***** write a higher order function to do this mith minimal code *****\n// const createLengthTest = minLength => \n//     word => word.length > minLength;\n// const longWords = words.filter(createLengthTest(5));\n// console.log(longWords);\n// This here is a very nice functional code\n//--------------------------------------------------------\n// Every/some\n// we pass them a function that reurns either true or false, but every/some returns a boolean (only true or false)\n// -- every returns true if and only if a given condition is true for all elements in an array\n// -- some returns true if the conditions are true any of the elements in an array, false if and only if every condition is false for all elements in the array\n// example\nvar employees = [{\n  name: 'John Whitten',\n  salary: 90000\n}, {\n  same: 'Katherine Spinella',\n  salary: 120000\n}, {\n  name: 'Franny Danza',\n  salary: 1500000\n}, {\n  name: 'MoonPie Danger',\n  salary: 830000\n}];\n\nvar makesMoreThanOneMillion = function makesMoreThanOneMillion(employee) {\n  return employee.salary > 1000000;\n};\n\nvar result = employees.some(makesMoreThanOneMillion); // console.log(result);\n\nvar formValues = ['Mike', 'Stephen', 'California', 'developer'];\n\nvar isNotEmpty = function isNotEmpty(string) {\n  return !!string;\n};\n\nvar allFieldsFilled = formValues.every(isNotEmpty);\nconsole.log(allFieldsFilled); //--------------------------------------------------------\n// Slicing\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["employees","name","salary","same","makesMoreThanOneMillion","employee","result","some","formValues","isNotEmpty","string","allFieldsFilled","every","console","log"],"sourceRoot":"/Users/BigBoi/Desktop/functional-ES6/","sources":["example.js"],"sourcesContent":["// const add = (x, y) => x + y;\n\n// const double = number => number * 2;\n// //as opposed to\n// // const double = function(number) {\n// //   return number * 2;\n// // }\n\n// const sayHello = () => console.log('Hello');\n\n// const getPersonData = () => ({\n//     name: 'John Whitten',\n//     age: 38,\n//     job: 'programmer',\n// });\n\n// const myArrowFunction = (arg1, arg2) => arg1 + arg2;\n\n// as opposed to\n// const myArrowFunction = (arg1, arg2) => {\n//   return arg1 + arg2;\n// }\n\n// const sayHello = name => console.log('Hello' + name);\n\n// const sayHello2 = sayHello;\n// sayHello2('John');\n\n// const myFunction = true \n//     ? () => console.log('First option')\n//     : () => console.log('Second option');\n\n// const DEVELOPMENT = true;\n\n// const fetchDataReal = () => {\n//   // time-intensive operations here\n// }\n\n// const fetchDataFake = () => ({\n//     name: 'John Whitten',\n//     age: 38,\n// });\n\n// const fetchData = DEVELOPMENT\n//     ? fetchDataFake\n//     : fetchDataReal;\n\n// const double = x => x * 2;\n// const subtractOne = x => -1;\n// const triple = x => x * 3;\n// const add5 = x => x + 5;\n\n// const myNumber = 42;\n\n// const doubled = double(myNumber);\n// const minusOne = subtractOne(doubled);\n// //..\n\n// const functionsArray = [\n//     double, \n//     subtractOne,\n//     triple,\n//     add5,\n//     Math.sqrt,\n//   ];\n\n// var number = 42;\n\n// functionsArray.forEach(func => number = func(number));\n\n// console.log(number);\n\n\n\n//--------------------------------------------------------\n// Passing functions as arguments\n\n// const add = (x, y) => x + y;\n// const subtract = (x, y) => x - y;\n\n// const combine2and3 = func =>\n//     func(2, 3);\n  \n// // combine2and3(add); // -> 2 + 3\n// combine2and3((x, y) => x + y);\n// // combine2and3(subtract); // -> 2 - 3 \n\n// combine2and3(Math.max) // -> 3\n\n\n\n//--------------------------------------------------------\n// Returning functions\n\n// const createPrinter = () => () => console.log(\"Hello\");\n// // //// which is an arrow syntax way of writing the following:\n// const createPrinter = function() {\n//   return function() {\n//     console.log(\"Hello\");\n//   }\n// } \n\n// const createMultiplier = y => x => x * y;\n\n// // const double = x => x * 2;\n// // const triple = x => x * 3;\n// // const quadruple = x => x * 4;\n\n// const double = createMultiplier(2);\n// const triple = createMultiplier(3);\n// const quadruple = createMultiplier(4);\n\n// double(3)\n\n\n\n//--------------------------------------------------------\n// Closure\n\n// const createPrinter = () => {\n//   const myFavoriteNumber = 13;\n\n//   return () => console.log(`My favorite number is ${myFavoriteNumber}`);\n// }\n\n// const printer = createPrinter();\n// printer();\n\n// // $ npx babel-node example.js\n\n\n\n//--------------------------------------------------------\n// Implement private variable\n\n// const Person = ({ name, age, job }) => {\n//     var _name = name;\n//     var _age = age;\n//     var _job = job;\n\n//     return { \n//         getName: () => _name,\n//         getAge: () => _age,\n//         getJob: () => _job,\n\n//         setJob: newJob => _job = newJob,\n//         setAge: newAge => _age = newAge,\n//     };\n// }\n\n// const me = Person({ name: 'John', age: 38, job: \"artist\"});\n// console.log(me.getJob());\n// // me._name; // -> undefined\n// me.setJob('web developer');\n// console.log(me.getJob());\n// // me._job; // -> undefined\n// console.log(me.getAge());\n// me.setAge(\"forever young\");\n// console.log(me.getAge());\n\n\n\n//--------------------------------------------------------\n// Higher-Order Functions\n\n// const divide = (x, y) => {\n//   if (y === 0) {\n//     console.log('Error: dividing by zero');\n//     return null;\n//   }\n\n//   return x / y;\n// }\n\n// Improve the above code using higher-order functions\n\n// const divide = (x, y) => x / y;\n\n// const secondArgumentIsntZero = func =>\n// (...args) => {\n//   if (args[1] === 0) {\n//     console.log('Error: dividing by zero');\n//     return null;\n//   }\n\n//   return func(...args);\n// }\n\n// const divideSafe = secondArgumentIsntZero(divide);\n\n// console.log(divideSafe(7, 0));\n// console.log(divideSafe(5, 3));\n\n\n\n//--------------------------------------------------------\n// JavaScript: function parts\n\n//--------------------------------------------------------\n// The spread operator\n\n// const person = {\n//   name: \"John Whitten\",\n//   age: 38,\n//   hairColor: \"red\",\n//   eyeColor: \"brown\",\n// };\n\n// const careerData = {\n//   title: \"instructor\",\n//   company: \"Oregon State University\",\n// };\n\n// const personWithCareerDate = {\n//   ...person,\n//   ...careerData,\n// };\n\n// const updates = {\n//   name: \"John john\"\n// }\n\n// const updatedPerson = {\n//   ...person,\n//   ...updates,\n// };\n\n// // // console.log(personWithCareerDate);\n// // console.log(updatedPerson);\n\n// const numbers = [1,2,3,4,5];\n// // instead of -> numbers.push(6);\n// const newNumbers = [\n//   ...numbers,\n//   6,\n// ];\n\n// console.log(newNumbers);\n\n\n\n//--------------------------------------------------------\n// Mapping\n\n// // How we used to double numbers in an array\n// const doubledNumbers = [];\n\n// for (let i = 0; i < doubledNumbers.length; i++) {\n//   const doubled = numbers[i] * 2;\n//   doubledNumbers.push(doubled);\n// }\n\n\n// const numbers = [1,2,3,4,5];\n// numbers.reverse();\n// console.log(numbers);\n\n\n\n// non-functional way of using mapping\n\n// const numbers = [1,2,3,4,5];\n// const doubledNumbers = [];\n// for (let i = 0; i < numbers.length; i++) {\n//   doubledNumbers.push(numbers[i] * 2);\n// }\n//  console.log(doubledNumbers);\n\n// ***** re-write the above functional in a functional programming way *****\n// const numbers = [1,2,3,4,5];\n// const double = x => x * 2;\n// const doubledNumbers = numbers.map(double);\n// console.log(doubledNumbers);\n\n\n\n//--------------------------------------------------------\n// Filtering\n\n// myArray.filter(element => {\n//   ...return true; // (or false)\n// });\n\n// the difference between filter and map is the TYPE of function we pass into it\n// in map we pass in a function that returns a value for each element in the array\n// for filter we pass in a function that returns either true or false\n\n\n// const numbers = [1,2,3,4,5,6,7,8,9,10];\n\n// var evenNumbers = [];\n// for (let i = 0; i < numbers.length; i++) {\n//   if (numbers[i] % 2 === 0) {\n//     evenNumbers.push(numbers[i]);\n//   }\n// }\n\n // **** now we'll simplify the above function using filter ****\n\n// const numbers = [1,2,3,4,5,6,7,8,9,10];\n\n// const isEven = x => x % 2 === 0; \n\n// const evenNumbers = numbers.filter(isEven);\n\n// console.log(evenNumbers);\n\n\n// const words = [\n//   'hello',\n//   'goodbye',\n//   'the',\n//   'Antarctica',\n// ];\n\n// // const isLongerThan5 = word => word.length > 5;\n// // const longWords = words.filter(isLongerThan5);\n// // console.log(longWords);\n\n\n// ***** write a higher order function to do this mith minimal code *****\n\n// const createLengthTest = minLength => \n//     word => word.length > minLength;\n// const longWords = words.filter(createLengthTest(5));\n// console.log(longWords);\n\n// This here is a very nice functional code\n\n\n\n//--------------------------------------------------------\n// Every/some\n\n// we pass them a function that reurns either true or false, but every/some returns a boolean (only true or false)\n\n// -- every returns true if and only if a given condition is true for all elements in an array\n// -- some returns true if the conditions are true any of the elements in an array, false if and only if every condition is false for all elements in the array\n\n// example\n\nconst employees = [{\n  name: 'John Whitten',\n  salary: 90000,\n}, {\n  same: 'Katherine Spinella',\n  salary: 120000,\n}, {\n  name: 'Franny Danza',\n  salary: 1500000,\n}, {\n  name: 'MoonPie Danger',\n  salary: 830000,\n}];\n\nconst makesMoreThanOneMillion = employee =>\n    employee.salary > 1000000;\nconst result = employees.some(makesMoreThanOneMillion);\n\n// console.log(result);\n\nconst formValues = [\n  'Mike',\n  'Stephen',\n  'California',\n  'developer',\n];\n\nconst isNotEmpty = string => !!string;\n\nconst allFieldsFilled = formValues.every(isNotEmpty);\n\nconsole.log(allFieldsFilled);\n\n\n\n\n\n\n//--------------------------------------------------------\n// Slicing\n\n\n\n\n\n\n"],"mappingsjBC,IAAI,EAAE,cADW;EAEjBC,MAAM,EAAE;AAFS,CAAD,EAGf;EACDC,IAAI,EAAE,oBADL;EAEDD,MAAM,EAAE;AAFP,CAHe,EAMf;EACDD,IAAI,EAAE,cADL;EAEDC,MAAM,EAAE;AAFP,CANe,EASf;EACDD,IAAI,EAAE,gBADL;EAEDC,MAAM,EAAE;AAFP,CATe,CAAlB;;AAcA,IAAME,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,QAAQ;EAAA,OACpCA,QAAQ,CAACH,MAAT,GAAkB,OADkB;AAAA,CAAxC;;AAEA,IAAMI,MAAM,GAAGN,SAAS,CAACO,IAAV,CAAeH,uBAAf,CAAf,C,CAEA;;AAEA,IAAMI,UAAU,GAAG,CACjB,MADiB,EAEjB,SAFiB,EAGjB,YAHiB,EAIjB,WAJiB,CAAnB;;AAOA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,MAAM;EAAA,OAAI,CAAC,CAACA,MAAN;AAAA,CAAzB;;AAEA,IAAMC,eAAe,GAAGH,UAAU,CAACI,KAAX,CAAiBH,UAAjB,CAAxB;AAEAI,OAAO,CAACC,GAAR,CAAYH,eAAZ,E,CAOA;AACA"}},"mtime":1653072237458}}